{
    "contents" : "shinyServer(function(input, output, session){\n  \n  # fungsi source untuk meload fungsi yang dipakai bersama\n  source('fast.R', local = TRUE)\n  setInitValues <- function() {\n    # initialize state list and reactive values\n    if(testingFast) {\n      # load previous state for testing\n      \n    } else {\n      \n      state_list <<- list()\n      values <<- reactiveValues()\n      \n      # initial plot height and width\n      values$plotHeight <- 650\n      values$plotWidth <- 650\n      \n      # Datasets can change over time (i.e. the changedata function). Therefore,\n      # the data need to be a reactive value so the other reactive functions\n      # and outputs that depend on these datasets will know when they are changed.\n      # robj <- load(\"../base/data/data_init/diamonds.rda\") \n      robj <- load(\"data/data_init/diamonds.rda\") \n      df <- get(robj)\n      values[[\"diamonds\"]] <- df\n      values[[\"diamonds_descr\"]] <- attr(df,'description')\n      values$datasetlist <- c(\"diamonds\")\n    }\n  }\n  \n  setInitValues()   # using a function here so it can also be called from state.R to reset the app\n  \n  \n  # source dari data & alat analisis\n  R.utils::sourceDirectory('tools/analysis', recursive = TRUE, modifiedOnly = FALSE)\n  R.utils::sourceDirectory('tools/data', recursive = TRUE, modifiedOnly = FALSE)\n  R.utils::sourceDirectory('tools/app', recursive = TRUE, modifiedOnly = FALSE)\n})",
    "created" : 1403362514972.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "332077901",
    "id" : "EC59DB13",
    "lastKnownWriteTime" : 1404014287,
    "path" : "~/R/shiny/fast/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}